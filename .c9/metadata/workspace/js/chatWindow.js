{"changed":true,"filter":false,"title":"chatWindow.js","tooltip":"/js/chatWindow.js","value":"/** @jsx React.DOM */\n//TODO: https://keep.google.com/\ndocument.body.addEventListener('touchmove', function(event) {\n  console.log(event.source);\n  //if (event.source == document.body)\n    event.preventDefault();\n}, false);\n \n /*What is this for?!*/\nwindow.onresize = function() {\n  $(document.body).width(window.innerWidth).height(window.innerHeight);\n}\n\n$(function() {\n  window.onresize();\n});\n\nvar ref = new Firebase(\"https://lets-meat.firebaseio.com/\");\nvar guysRef = ref.child(\"guys\");\nvar currentUserRef;\nvar currentUserProfile;\nvar currentUserProfileData = {\n          name :  \"You\" ,\n          image : \"http://americanmuslimconsumer.com/wp-content/uploads/2013/09/blank-user.jpg\",\n          info : { lines : ['Online, Here', '150','XX'], about : \"This is your profile!\"}\n        };\n//local cache of the data\nvar currentUserData = [ { 'count' : 1 } ];\nvar processAuthData = function (newAuthData) {\n    currentUserRef = ref.child(\"userInter\").child(newAuthData.uid);\n    currentUserProfile = ref.child(\"userProfile\").child(newAuthData.uid);\n    \n    currentUserProfile.on('value',function (val) {\n      if (!val.exists()) {\n        currentUserProfile.set(currentUserProfileData);\n      } else {\n        currentUserProfileData = val.val();\n      }\n    });\n    \n    //get the currenct state\n    currentUserRef.on(\"value\",function(snapshot) {\n      if (!snapshot.exists()) {\n        currentUserRef.set(currentUserData);\n      } else {\n        //data defined\n        currentUserData = snapshot.val();\n      }\n    },function (argument) {\n      //no data - some issue\n    })\n    console.log(\"Authenticated successfully with payload:\", newAuthData.uid);\n}\n//syncronysly check if the user is logged in\nvar authData = ref.getAuth();\nif (authData) {\n  processAuthData(authData);\n} else {\n  //log the user in \n  ref.authAnonymously(function(anonError, anonAuthData) {\n    if (anonError) {\n      //show the user that w\n      console.log(\"Login Failed!\", anonError);\n    } else {\n      processAuthData(anonAuthData);\n    }\n  });\n}\n\nvar GuyButton = React.createClass({\n  handleClick : function (argument) {\n    var self = this;\n    //on select pass the details about the guy and the key\n    self.props.onSelect(self.props.guy,self.props.guyIndex);\n  },\n  render : function () {\n    var self = this;\n    var badge;\n    if (self.props.guyCount) {\n      badge = <span className=\"badge\">{self.props.guyCount}</span>;\n    }\n    var style = {};\n    \n    if (self.props.guy.image) {\n      console.log(self.props.guy.image);\n      style = {\n        backgroundImage : 'url(' + self.props.guy.image + ')',\n        backgroundSize : 'cover'\n      };\n    }\n    return (<a onClick={ self.handleClick }  className='square-box'>\n        <div className='square-content'>\n          <div className='square-inner'>\n            <span className='square-btn'>\n              <em>{ self.props.guy.name }</em>\n              {badge}\n              <span className='square-img' style={ style } ></span>\n            </span>\n          </div>\n        </div>\n      </a>);\n  }\n});\n\nvar GuyList = React.createClass({\n  mixins : [ReactFireMixin],\n  getInitialState: function() {\n    return { \n      userProfile : { name : 'You' },\n      items : [ { name : 'Andrew' }],\n      userItems : [ { count : 0 }]\n    };\n  },\n  componentWillMount: function() {\n    this.bindAsArray(guysRef, \"items\");\n    this.bindAsArray(currentUserRef, \"userItems\")\n    this.bindAsObject(currentUserProfile, \"userProfile\" )\n  },\n  render : function () {\n    var self = this;\n    var guys = (self.state.items||[]).map(function(item,index) {\n        return <GuyButton guy={item} guyIndex={index} guyCount={self.state.userItems[index].count} key={index} onSelect={ self.props.onSelect }  />;\n      });\n    return (<div className=\"main-view\"><div className=\"navbar navbar-inverse\" role=\"navigation\">\n     <div className=\"container\">\n       <ul className=\"nav navbar-nav pull-right\">\n         <li><a href=\"#alert\"><i className=\"glyphicon glyphicon-user\"></i></a></li>\n       </ul>\n       <div className=\"navbar-header\">\n         <a className=\"navbar-brand\" href=\"#\">MEAT <img src=\"img/packed.svg\" /></a>\n       </div>\n     </div>\n   </div>\n   <div className=\"scroll-content guys\">\n      <GuyButton guy={self.state.userProfile} onSelect={ self.props.onSelect }  />\n      {guys}\n   </div>\n   </div>);\n  }\n});\n\nvar GuyDetails = React.createClass({\n  mixins : [ReactFireMixin],\n  getInitialState: function() {\n    return { height : 0, scrollTop : 0 };\n  },\n  componentWillMount: function() {\n    if ( typeof this.props.guyIndex !== 'undefined') {\n      this.bindAsObject(currentUserRef.child(this.props.guyIndex), \"userState\");\n    }\n  },\n  onScroll : function(arg) {\n    this.setState({ scrollTop : $(arg.currentTarget).scrollTop() });\n  },\n  updateDimensions : function () {\n    this.setState({ height : $(this.refs.scroll.getDOMNode()).height() });\n  },\n  changeImage : function(event) {\n    //http://www.nickdesteffen.com/blog/file-uploading-over-ajax-using-html5\n    var self = this;\n    var files = [];\n    if (!event.target.files.length) { return; }\n    self.setState({ uploading : true });\n    \n    var reader = new FileReader();\n    reader.onload = function(event) { \n      self.props.guy.image = event.target.result; \n      currentUserProfile.child('image').set(self.props.guy.image);\n      self.setState({ uploading : null });\n    };\n    reader.readAsDataURL(event.target.files[0]);\n  },\n  componentDidMount: function () {\n    this.updateDimensions();\n    $(window).on(\"resize\",this.updateDimensions);\n    if (this.refs.image) {\n      $(this.refs.image.getDOMNode()).on('change',this.changeImage);\n    }\n  },\n  componentWillUnmount: function() {\n     $(window).off(\"resize\",this.updateDimensions);\n     if (this.refs.image) {\n      $(this.refs.image.getDOMNode()).off('change',this.changeImage);\n    }\n  },\n  render : function (argument) {\n    var info = this.props.guy.info.lines.map(function(item,index) {\n      return (<div key={index}>{ item }</div>)\n    });\n    \n    var opacity = 1;\n    \n    if (this.state.height) {\n      opacity = 1 - this.state.scrollTop / this.state.height;\n      if (opacity < 0) { \n        opacity = 0;\n      }\n    }\n    \n    var style =  {\n      backgroundImage : 'url(' + this.props.guy.image + '),url(../img/loading.gif)',\n      opacity : opacity\n    };\n    \n\n    var button;\n    if (this.state.userState) {\n      var badge;\n      if (this.state.userState && this.state.userState.count) {\n        badge = <span className=\"badge\">{this.state.userState.count}</span>;\n      }\n      button = (<a onClick={this.props.onChat } className=\"pull-right btn-lg btn btn-default\">\n        {badge}\n        <i className=\"fa fa-comments-o\"></i>\n      </a>);\n    } else {\n      var buttonClassName = \"pull-right btn-lg btn btn-default upload-btn\";\n      var iconClassName = \"fa fa-camera\";\n      if (this.state.uploading) {\n        buttonClassName += \" active\";\n        iconClassName = \"fa fa-spin fa-spinner\";\n      }\n      button = (<a className={buttonClassName} >\n        <div><i className={iconClassName} ></i> Upload a Hot Pic</div>\n        <input type=\"file\" ref=\"image\" />\n      </a>);\n    }\n    \n    return (<div className=\"main-view\">\n      <div className=\"navbar navbar-inverse\" role=\"navigation\">\n       <div className=\"container\">\n         <ul className=\"nav navbar-nav  pull-left\">\n           <li><a onClick={ this.props.onBack }><i className=\"fa fa-chevron-left\"></i> Browse</a></li>\n         </ul>\n         <p className=\"text-center navbar-text\">{this.props.guy.name}</p>\n       </div>\n     </div>\n     <div className=\"guy-image\" style={ style }></div>\n     <div onScroll={ this.onScroll } ref=\"scroll\" className=\"scroll-content guy-details\">\n        <div className=\"guy-details-inner\">\n          {button}\n          <h1>{this.props.guy.name}</h1>\n          <div className=\"box\">{info}</div>\n          <div className=\"box\">\n            <div className=\"heading\">About Me</div>\n            <div dangerouslySetInnerHTML={{\n              __html: this.props.guy.info.about }} ></div>\n          </div>\n        </div>\n     </div>\n    </div>);\n  }\n});\n\nvar ChatBubble = React.createClass({\n  render: function() {\n    var self = this;\n    var createItem = function(item, index) {\n      return <div className=\"clearfix\" key={index}><div className={ 'from-' +  item.from }  ><p>{ item.text }</p></div></div>;\n    };\n    return <div className=\"clearfix chat-messages scroll-content\">{ (!self.props.items)?'':self.props.items.map(createItem) }</div>;\n  }\n});\n\nvar ChatOption = React.createClass({\n  onSelect : function (event) {\n    //todo - figure out what path we are at right now and update the state\n    var self = this;\n    self.props.onSelect(self.props.option,self.props.optionIndex)\n  },\n  render : function() {\n    var self = this;\n    return <li ><a onClick={ self.onSelect } >{ self.props.option.text }</a></li>;\n  }\n});\n\nvar ChatOptions = React.createClass({\n    render : function() {\n      var self = this;\n      if (!self.props.options) { return false; }\n      var createOptions = function (item,index) {\n         return <ChatOption onSelect={ self.props.onSelect } optionIndex={index} key={index} option={item} />;\n      }\n      return <div className=\"chat-options\"><ul>{ self.props.options.map(createOptions) }</ul></div>  \n    }\n});\n\nvar ChatWindow = React.createClass({\n  mixins: [ReactFireMixin],\n\n  getInitialState: function() {\n    //TODO change this to firgure out there the user is for this guy\n    /*var currentGuyRef;\n    if (currentUserData[this.props.key]) {\n      currentGuyRef = new Firebase(currentUserData[this.props.key]);\n      //guysRef.child(this.props.key).ref()\n    } else {\n      \n    }*/\n    //this.props.guy.interaction\n    //this.props.guy.interaction\n    return {\n        items : [],//[ { text : .result.text , from : 'them' }],\n        options : []// .options\n    };\n  },\n  componentWillMount: function() {\n    //\"https://lets-meat.firebaseio.com/guys/\" +\n    var self = this;\n    var firebaseRef = currentUserRef.child(self.props.guyIndex);\n    var guyItems = firebaseRef.child(\"items\"); //new Firebase(currentUserData[this.props.key]);\n    //viewing this page resets the count to 0\n    firebaseRef.child(\"count\").set(0);\n    //get the options\n    self.guyLocation = firebaseRef.child(\"loc\");\n    self.guyLocation.on('value',function (val) {\n      // body...\n      if (!val.exists()) {\n        self.guyLocation.set(\"https://lets-meat.firebaseio.com/guys/\"+self.props.guyIndex+\"/interaction/options/\");\n      } else {\n        self.guyLocationData = val.val();\n        var newPositon = new Firebase(self.guyLocationData);\n        newPositon.on('value',function(ops) {\n            if (ops.exists()) {\n              self.setState({ options : ops.val()});\n            }\n            newPositon.off();\n        });\n      }\n    });\n    /*\n    self.guyLocation.on('child_changed',function(snap) {\n      self.guyLocationData = snap;\n      \n    });*/\n    //console.log(guyItems.val(),guyItems.exists());\n    guyItems.on('value',function (val) {\n      // body...\n      if (!val.exists()) {\n        //push the first item\n        guyItems.push({ text : self.props.guy.interaction.result.text , from : 'them' });\n      }\n      guyItems.off();\n    })\n    self.bindAsArray(guyItems, \"items\");\n  },\n  componentWillUnmount: function() {\n    this.guyLocation.off();\n  },\n  onSelect : function (item,index) {\n    var self = this;\n     self.firebaseRefs[\"items\"].push({ text : item.text, from:'me' });\n     //var nextItems = self.state.items.concat(;\n     \n     var nextOptions = self.guyLocationData + index + \"/options\";//  item.options;\n     var nextResult = item.result;\n     self.setState({ options:null});\n     //after a short while update the items\n     setTimeout(function() {\n         if (nextResult) {\n           self.firebaseRefs[\"items\"].push({ text : nextResult.text , from: 'them' });\n         }\n         //var nextItems = self.state.items.concat(newItem);\n         self.guyLocation.set(nextOptions);\n         //self.setState({items : nextItems, options : nextOptions});\n     }, 1000);\n  },\n\n  render: function() {\n      var self = this;\n      \n    return (<div className=\"main-view\">\n      <div className=\"navbar navbar-inverse\" role=\"navigation\">\n       <div className=\"container\">\n         <ul className=\"nav navbar-nav  pull-left\">\n           <li><a onClick={ self.props.onBack }><i className=\"fa fa-chevron-left\"></i> Browse</a></li>\n         </ul>\n         <p className=\"text-center navbar-text\">{self.props.guy.name}</p>\n       </div>\n     </div>\n      <div className=\"chat-options-wrapper\">\n      <ChatBubble items={ self.state.items } />\n      <ChatOptions options={ self.state.options} onSelect={ self.onSelect }  />\n    </div></div>);\n  }\n});\n\n\nvar App = React.createClass({\n  getInitialState: function() {\n    return {};\n  },\n  backToGuy : function() {\n    var self = this;\n    self.setState({ chatting : null });\n  },\n  toGuy : function(guy,guyIndex) {\n    var self = this;\n    self.setState({ guy : guy , guyIndex : guyIndex, chatting : null });\n  },\n  toHome : function() {\n    var self = this;\n    self.setState({ guy : null, guyIndex : null });\n  },\n  toChat : function () {\n    var self = this;\n    self.setState({ chatting : true });\n  },\n  render : function (argument) {\n    var self = this;\n    var result;\n    if (self.state.chatting && self.state.guy) {\n      result = <ChatWindow onBack={ self.backToGuy } guy={ self.state.guy } guyIndex={ self.state.guyIndex } />;\n    } else if (self.state.guy) {\n      result = <GuyDetails onBack={ self.toHome } onChat={ self.toChat } guy={ self.state.guy } guyIndex={ self.state.guyIndex } />;\n    } else {\n      result = <GuyList onSelect={ self.toGuy } />;\n    }\n    \n    return <div id=\"main\">{result}<span id=\"version\">v0.01</span></div>;\n  }\n});\n\nvar InstallMe = React.createClass({\n  render : function () {\n    var self = this;\n    return (<div className=\"container\">\n        <div className=\"alert alert-info\">\n          <h4>Add To Home Screen</h4>\n          <p>To try out this amazing new game add this page to your home screen</p>\n        </div>\n    </div>);\n    \n  }\n});\n\nvar isInstallable = (\"standalone\" in window.navigator)\nvar isInstalled = window.navigator.standalone;\nif (isInstallable && !isInstalled){\n  React.render(<InstallMe />, document.body);\n} else {\n  $(document.body).toggleClass('app-installable',isInstallable)\n  // My app is installed and therefore fullscreen\n  React.render(<App />, document.body);\n}","undoManager":{"stack":[[{"start":{"row":84,"column":28},"end":{"row":84,"column":29},"action":"insert","lines":["v"]}],[{"start":{"row":84,"column":29},"end":{"row":84,"column":30},"action":"insert","lines":["e"]}],[{"start":{"row":84,"column":30},"end":{"row":84,"column":31},"action":"insert","lines":["r"]}],[{"start":{"row":84,"column":31},"end":{"row":84,"column":32},"action":"insert","lines":["'"]}],[{"start":{"row":84,"column":32},"end":{"row":84,"column":33},"action":"insert","lines":[","]}],[{"start":{"row":93,"column":42},"end":{"row":93,"column":43},"action":"insert","lines":[" "]}],[{"start":{"row":93,"column":43},"end":{"row":93,"column":44},"action":"insert","lines":["s"]}],[{"start":{"row":93,"column":44},"end":{"row":93,"column":45},"action":"insert","lines":["t"]}],[{"start":{"row":93,"column":45},"end":{"row":93,"column":46},"action":"insert","lines":["y"]}],[{"start":{"row":93,"column":46},"end":{"row":93,"column":47},"action":"insert","lines":["l"]}],[{"start":{"row":93,"column":47},"end":{"row":93,"column":48},"action":"insert","lines":["e"]}],[{"start":{"row":93,"column":48},"end":{"row":93,"column":49},"action":"insert","lines":["="]}],[{"start":{"row":93,"column":49},"end":{"row":93,"column":50},"action":"insert","lines":["{"]}],[{"start":{"row":93,"column":50},"end":{"row":93,"column":51},"action":"insert","lines":["}"]}],[{"start":{"row":93,"column":50},"end":{"row":93,"column":51},"action":"insert","lines":[" "]}],[{"start":{"row":93,"column":51},"end":{"row":93,"column":52},"action":"insert","lines":["s"]}],[{"start":{"row":93,"column":52},"end":{"row":93,"column":53},"action":"insert","lines":["t"]}],[{"start":{"row":93,"column":51},"end":{"row":93,"column":53},"action":"remove","lines":["st"]},{"start":{"row":93,"column":51},"end":{"row":93,"column":56},"action":"insert","lines":["style"]}],[{"start":{"row":93,"column":56},"end":{"row":93,"column":57},"action":"insert","lines":[" "]}],[{"start":{"row":84,"column":32},"end":{"row":84,"column":33},"action":"remove","lines":[","]}],[{"start":{"row":85,"column":7},"end":{"row":85,"column":8},"action":"insert","lines":[";"]}],[{"start":{"row":81,"column":27},"end":{"row":82,"column":0},"action":"insert","lines":["",""]},{"start":{"row":82,"column":0},"end":{"row":82,"column":6},"action":"insert","lines":["      "]}],[{"start":{"row":82,"column":6},"end":{"row":82,"column":7},"action":"insert","lines":["d"]}],[{"start":{"row":82,"column":7},"end":{"row":82,"column":8},"action":"insert","lines":["e"]}],[{"start":{"row":82,"column":8},"end":{"row":82,"column":9},"action":"insert","lines":["b"]}],[{"start":{"row":82,"column":9},"end":{"row":82,"column":10},"action":"insert","lines":["y"]}],[{"start":{"row":82,"column":9},"end":{"row":82,"column":10},"action":"remove","lines":["y"]}],[{"start":{"row":82,"column":9},"end":{"row":82,"column":10},"action":"insert","lines":["u"]}],[{"start":{"row":82,"column":10},"end":{"row":82,"column":11},"action":"insert","lines":["g"]}],[{"start":{"row":82,"column":11},"end":{"row":82,"column":12},"action":"insert","lines":["g"]}],[{"start":{"row":82,"column":12},"end":{"row":82,"column":13},"action":"insert","lines":["e"]}],[{"start":{"row":82,"column":13},"end":{"row":82,"column":14},"action":"insert","lines":["r"]}],[{"start":{"row":82,"column":14},"end":{"row":82,"column":15},"action":"insert","lines":[";"]}],[{"start":{"row":82,"column":6},"end":{"row":82,"column":15},"action":"remove","lines":["debugger;"]}],[{"start":{"row":80,"column":19},"end":{"row":81,"column":0},"action":"insert","lines":["",""]},{"start":{"row":81,"column":0},"end":{"row":81,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":81,"column":4},"end":{"row":81,"column":13},"action":"insert","lines":["debugger;"]}],[{"start":{"row":81,"column":4},"end":{"row":81,"column":13},"action":"remove","lines":["debugger;"]}],[{"start":{"row":83,"column":4},"end":{"row":83,"column":6},"action":"insert","lines":["  "]}],[{"start":{"row":83,"column":6},"end":{"row":83,"column":7},"action":"insert","lines":["c"]}],[{"start":{"row":83,"column":7},"end":{"row":83,"column":8},"action":"insert","lines":["o"]}],[{"start":{"row":83,"column":8},"end":{"row":83,"column":9},"action":"insert","lines":["n"]}],[{"start":{"row":83,"column":9},"end":{"row":83,"column":10},"action":"insert","lines":["s"]}],[{"start":{"row":83,"column":10},"end":{"row":83,"column":11},"action":"insert","lines":["o"]}],[{"start":{"row":83,"column":6},"end":{"row":83,"column":11},"action":"remove","lines":["conso"]},{"start":{"row":83,"column":6},"end":{"row":83,"column":13},"action":"insert","lines":["console"]}],[{"start":{"row":83,"column":13},"end":{"row":83,"column":14},"action":"insert","lines":["."]}],[{"start":{"row":83,"column":14},"end":{"row":83,"column":15},"action":"insert","lines":["l"]}],[{"start":{"row":83,"column":15},"end":{"row":83,"column":16},"action":"insert","lines":["o"]}],[{"start":{"row":83,"column":16},"end":{"row":83,"column":17},"action":"insert","lines":["g"]}],[{"start":{"row":83,"column":18},"end":{"row":83,"column":19},"action":"remove","lines":[" "]}],[{"start":{"row":83,"column":17},"end":{"row":83,"column":18},"action":"remove","lines":[" "]}],[{"start":{"row":83,"column":17},"end":{"row":83,"column":19},"action":"insert","lines":["()"]}],[{"start":{"row":83,"column":18},"end":{"row":83,"column":19},"action":"insert","lines":["s"]}],[{"start":{"row":83,"column":19},"end":{"row":83,"column":20},"action":"insert","lines":["e"]}],[{"start":{"row":83,"column":20},"end":{"row":83,"column":21},"action":"insert","lines":["l"]}],[{"start":{"row":83,"column":18},"end":{"row":83,"column":21},"action":"remove","lines":["sel"]},{"start":{"row":83,"column":18},"end":{"row":83,"column":22},"action":"insert","lines":["self"]}],[{"start":{"row":83,"column":22},"end":{"row":83,"column":23},"action":"insert","lines":["."]}],[{"start":{"row":83,"column":23},"end":{"row":83,"column":24},"action":"insert","lines":["p"]}],[{"start":{"row":83,"column":24},"end":{"row":83,"column":25},"action":"insert","lines":["r"]}],[{"start":{"row":83,"column":25},"end":{"row":83,"column":26},"action":"insert","lines":["o"]}],[{"start":{"row":83,"column":23},"end":{"row":83,"column":26},"action":"remove","lines":["pro"]},{"start":{"row":83,"column":23},"end":{"row":83,"column":28},"action":"insert","lines":["props"]}],[{"start":{"row":83,"column":29},"end":{"row":83,"column":30},"action":"insert","lines":[";"]}],[{"start":{"row":82,"column":19},"end":{"row":82,"column":20},"action":"insert","lines":["g"]}],[{"start":{"row":82,"column":20},"end":{"row":82,"column":21},"action":"insert","lines":["u"]}],[{"start":{"row":82,"column":21},"end":{"row":82,"column":22},"action":"insert","lines":["y"]}],[{"start":{"row":82,"column":22},"end":{"row":82,"column":23},"action":"insert","lines":["."]}],[{"start":{"row":85,"column":26},"end":{"row":85,"column":42},"action":"remove","lines":["self.props.image"]},{"start":{"row":85,"column":26},"end":{"row":85,"column":46},"action":"insert","lines":["self.props.guy.image"]}],[{"start":{"row":83,"column":18},"end":{"row":83,"column":28},"action":"remove","lines":["self.props"]},{"start":{"row":83,"column":18},"end":{"row":83,"column":38},"action":"insert","lines":["self.props.guy.image"]}],[{"start":{"row":85,"column":25},"end":{"row":85,"column":26},"action":"insert","lines":[" "]}],[{"start":{"row":85,"column":26},"end":{"row":85,"column":34},"action":"insert","lines":["'url(' +"]}],[{"start":{"row":85,"column":55},"end":{"row":85,"column":56},"action":"insert","lines":[" "]}],[{"start":{"row":85,"column":56},"end":{"row":85,"column":57},"action":"insert","lines":["+"]}],[{"start":{"row":85,"column":57},"end":{"row":85,"column":58},"action":"insert","lines":[" "]}],[{"start":{"row":85,"column":58},"end":{"row":85,"column":60},"action":"insert","lines":["''"]}],[{"start":{"row":85,"column":59},"end":{"row":85,"column":60},"action":"insert","lines":[")"]}],[{"start":{"row":7,"column":1},"end":{"row":8,"column":0},"action":"insert","lines":["",""]},{"start":{"row":8,"column":0},"end":{"row":8,"column":1},"action":"insert","lines":[" "]}],[{"start":{"row":8,"column":1},"end":{"row":8,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":8,"column":2},"end":{"row":8,"column":3},"action":"insert","lines":["*"]}],[{"start":{"row":8,"column":3},"end":{"row":8,"column":4},"action":"insert","lines":["*"]}],[{"start":{"row":8,"column":4},"end":{"row":8,"column":5},"action":"insert","lines":["/"]}],[{"start":{"row":8,"column":3},"end":{"row":8,"column":4},"action":"insert","lines":["W"]}],[{"start":{"row":8,"column":4},"end":{"row":8,"column":5},"action":"insert","lines":["h"]}],[{"start":{"row":8,"column":5},"end":{"row":8,"column":6},"action":"insert","lines":["a"]}],[{"start":{"row":8,"column":6},"end":{"row":8,"column":7},"action":"insert","lines":["t"]}],[{"start":{"row":8,"column":7},"end":{"row":8,"column":8},"action":"insert","lines":[" "]}],[{"start":{"row":8,"column":8},"end":{"row":8,"column":9},"action":"insert","lines":["i"]}],[{"start":{"row":8,"column":9},"end":{"row":8,"column":10},"action":"insert","lines":["s"]}],[{"start":{"row":8,"column":10},"end":{"row":8,"column":11},"action":"insert","lines":[" "]}],[{"start":{"row":8,"column":11},"end":{"row":8,"column":12},"action":"insert","lines":["t"]}],[{"start":{"row":8,"column":12},"end":{"row":8,"column":13},"action":"insert","lines":["h"]}],[{"start":{"row":8,"column":13},"end":{"row":8,"column":14},"action":"insert","lines":["i"]}],[{"start":{"row":8,"column":14},"end":{"row":8,"column":15},"action":"insert","lines":["s"]}],[{"start":{"row":8,"column":15},"end":{"row":8,"column":16},"action":"insert","lines":[" "]}],[{"start":{"row":8,"column":16},"end":{"row":8,"column":17},"action":"insert","lines":["f"]}],[{"start":{"row":8,"column":17},"end":{"row":8,"column":18},"action":"insert","lines":["o"]}],[{"start":{"row":8,"column":18},"end":{"row":8,"column":19},"action":"insert","lines":["r"]}],[{"start":{"row":8,"column":19},"end":{"row":8,"column":20},"action":"insert","lines":["r"]}],[{"start":{"row":8,"column":20},"end":{"row":8,"column":21},"action":"insert","lines":["?"]}],[{"start":{"row":8,"column":20},"end":{"row":8,"column":21},"action":"remove","lines":["?"]}],[{"start":{"row":8,"column":19},"end":{"row":8,"column":20},"action":"remove","lines":["r"]}],[{"start":{"row":8,"column":19},"end":{"row":8,"column":20},"action":"insert","lines":["?"]}],[{"start":{"row":8,"column":20},"end":{"row":8,"column":21},"action":"insert","lines":["!"]}]],"mark":-1,"position":100},"ace":{"folds":[],"scrolltop":1.5,"scrollleft":0,"selection":{"start":{"row":7,"column":1},"end":{"row":7,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1430883371395}